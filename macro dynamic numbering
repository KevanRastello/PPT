Sub AddCustomSlideNumbers()

    ' === USER SETTINGS ===
    Dim startSlide As Integer: startSlide = 2      ' << First slide to number
    Dim endSlide As Integer: endSlide = 14         ' << Last slide to number

    Dim fontSize As Integer: fontSize = 18         ' << Font size
    Dim fontName As String: fontName = "Calibri"   ' << Font type
    Dim marginRight As Single: marginRight = 20    ' << Distance from right edge
    Dim marginBottom As Single: marginBottom = 15  ' << Distance from bottom edge

    Dim textColorDefault As Long: textColorDefault = RGB(0, 0, 0)       ' << Default (black)
    Dim textColorInverted As Long: textColorInverted = RGB(255, 255, 255) ' << For dark backgrounds (white)

    ' === SLIDES TO INVERT COLOR ===
    Dim invertColorSlides As Variant
    invertColorSlides = Array(6, 7, 10)  ' << Put slide numbers here with dark background

    ' === INTERNAL SETUP ===
    Dim sld As Slide, shp As Shape
    Dim slideWidth As Single: slideWidth = ActivePresentation.PageSetup.slideWidth
    Dim slideHeight As Single: slideHeight = ActivePresentation.PageSetup.slideHeight

    Dim currentNumber As Integer: currentNumber = 1
    Dim totalNumber As Integer: totalNumber = endSlide - startSlide + 1

    ' === APPLY TO EACH SLIDE IN RANGE ===
    For Each sld In ActivePresentation.Slides
        If sld.slideIndex >= startSlide And sld.slideIndex <= endSlide Then

            ' Determine whether to use inverted text color
            Dim useInvertedColor As Boolean: useInvertedColor = False
            Dim i As Integer
            For i = LBound(invertColorSlides) To UBound(invertColorSlides)
                If sld.slideIndex = invertColorSlides(i) Then
                    useInvertedColor = True
                    Exit For
                End If
            Next i

            Dim currentColor As Long
            currentColor = IIf(useInvertedColor, textColorInverted, textColorDefault)

            ' Remove any existing custom number
            For Each shp In sld.Shapes
                If shp.Name = "SlideNum_Custom" Then shp.Delete
            Next shp

            ' Add text box with dummy size
            Set shp = sld.Shapes.AddTextbox( _
                Orientation:=msoTextOrientationHorizontal, _
                Left:=0, Top:=0, Width:=10, Height:=10)

            With shp
                .Name = "SlideNum_Custom"
                .TextFrame.TextRange.Text = currentNumber & " / " & totalNumber
                .TextFrame.TextRange.Font.Size = fontSize
                .TextFrame.TextRange.Font.Name = fontName
                .TextFrame.TextRange.Font.Color.RGB = currentColor
                .TextFrame.TextRange.ParagraphFormat.Alignment = ppAlignRight
                .TextFrame.VerticalAnchor = msoAnchorBottom
                .TextFrame.WordWrap = msoFalse                           ' Prevent text from stacking
                .TextFrame.AutoSize = ppAutoSizeShapeToFitText          ' Resize box to fit text
                .Line.Visible = msoFalse
            End With

            ' Move to bottom-right corner
            shp.Left = slideWidth - shp.Width - marginRight
            shp.Top = slideHeight - shp.Height - marginBottom

            ' Lock to prevent accidental edits
            shp.Locked = msoTrue

            currentNumber = currentNumber + 1
        End If
    Next sld

End Sub
